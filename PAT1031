#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

void read(char *a[100],int n);
void check(char *a[100],int n);
bool check_integers(char *a);
int add_and_remainder(char *a);
bool correspond(int i,char check_char);
void putout(char *a);

int main(void){
	char *a[100];
	int n;
	int i;
	
	scanf("%d",&n);
	getchar();								
	for(i=0;i<n;i++){
		a[i]=(char *)malloc(sizeof(char)*18);
	}										
	read(a,n);
	check(a,n); 
}

void read(char *a[100],int n){
	char ch;
	int i,j;
	for(i=0;i<n;i++){
		for(j=0;j<18;j++){
			ch=getchar();
			a[i][j]=ch;
		}
		ch=getchar();
		if(ch==EOF){
			exit(0);
		}
	}
	
}

void check(char *a[100],int n){
	int i,j;
	int count=0;
	for(i=0;i<n;i++){
		if(check_integers(a[i])){
			if(correspond(add_and_remainder(a[i]),a[i][17])){
				count++;
			}
			else{
				putout(a[i]);
			}
		}
		else{
			putout(a[i]);
		}
	}
	if(count==n){
		printf("All passed");
	}
}

bool check_integers(char *a){
	for(int i=0;i<17;i++){
		if(a[i]>='0'&&a[i]<='9'){
			;
		}
		else{
			return false;
		}
	}
	return true;
}

int add_and_remainder(char *a){
	int sum=0;
	int b[17];
	for(int i=0;i<17;i++){
		b[i]=a[i]-'0';
	}
	sum=(b[0]*7+b[1]*9+b[2]*10+b[3]*5+b[4]*8
		+b[5]*4+b[6]*2+b[7]+b[8]*6+b[9]*3+b[10]*7
			+b[11]*9+b[12]*10+b[13]*5+b[14]*8+b[15]*4+b[16]*2);
	return sum%11;
}

bool correspond(int i,char check_char){
	switch(i){
		case 0:if(check_char=='1'){
			return true;
		}break;
		case 1:if(check_char=='0'){
			return true;
		}break;
		case 2:if(check_char=='X'){
			return true;
		}break;
		case 3:if(check_char=='9'){
			return true;
		}break;
		case 4:if(check_char=='8'){
			return true;
		}break;
		case 5:if(check_char=='7'){
			return true;
		}break;
		case 6:if(check_char=='6'){
			return true;
		}break;
		case 7:if(check_char=='5'){
			return true;
		}break;
		case 8:if(check_char=='4'){
			return true;
		}break;
		case 9:if(check_char=='3'){
			return true;
		}break;
		case 10:if(check_char=='2'){
			return true;
		}break;
	}
	return false;
}

void putout(char *a){
	for(int i=0;i<18;i++){
		printf("%c",a[i]);
	}
	puts("");
}
